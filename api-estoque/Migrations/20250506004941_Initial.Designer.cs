// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api_estoque.EntityConfig;

#nullable disable

namespace api_estoque.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506004941_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("api_estoque.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("api_estoque.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Estoque");
                });

            modelBuilder.Entity("api_estoque.Models.EstoqueProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstoqueId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProdutoId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("ProdutoId1")
                        .IsUnique();

                    b.ToTable("EstoqueProdutos");
                });

            modelBuilder.Entity("api_estoque.Models.Movimentacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstoqueProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueProdutoId");

                    b.HasIndex("UserId");

                    b.ToTable("Movimentacao");
                });

            modelBuilder.Entity("api_estoque.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoProduto")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produto");

                    b.HasDiscriminator<int>("TipoProduto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("api_estoque.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api_estoque.Models.Validade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataValidade")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstoqueProdutoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EstoqueProdutoId");

                    b.ToTable("Validade");
                });

            modelBuilder.Entity("api_estoque.Models.ProdutoBasic", b =>
                {
                    b.HasBaseType("api_estoque.Models.Produto");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("api_estoque.Models.ProdutoPerecivel", b =>
                {
                    b.HasBaseType("api_estoque.Models.Produto");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("api_estoque.Models.Estoque", b =>
                {
                    b.HasOne("api_estoque.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("api_estoque.Models.Estoque", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api_estoque.Models.EstoqueProduto", b =>
                {
                    b.HasOne("api_estoque.Models.Estoque", "Estoque")
                        .WithMany("EstoqueProdutos")
                        .HasForeignKey("EstoqueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_estoque.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_estoque.Models.Produto", null)
                        .WithOne("EstoqueProduto")
                        .HasForeignKey("api_estoque.Models.EstoqueProduto", "ProdutoId1");

                    b.Navigation("Estoque");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("api_estoque.Models.Movimentacao", b =>
                {
                    b.HasOne("api_estoque.Models.EstoqueProduto", "EstoqueProduto")
                        .WithMany()
                        .HasForeignKey("EstoqueProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_estoque.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstoqueProduto");

                    b.Navigation("User");
                });

            modelBuilder.Entity("api_estoque.Models.Produto", b =>
                {
                    b.HasOne("api_estoque.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("api_estoque.Models.Validade", b =>
                {
                    b.HasOne("api_estoque.Models.EstoqueProduto", null)
                        .WithMany("Validades")
                        .HasForeignKey("EstoqueProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_estoque.Models.Estoque", b =>
                {
                    b.Navigation("EstoqueProdutos");
                });

            modelBuilder.Entity("api_estoque.Models.EstoqueProduto", b =>
                {
                    b.Navigation("Validades");
                });

            modelBuilder.Entity("api_estoque.Models.Produto", b =>
                {
                    b.Navigation("EstoqueProduto")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
